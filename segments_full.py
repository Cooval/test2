# AUTO-GENERATED segments with eval-lambdas
CUT, FOLD = 'CUT','FOLD'
SEGMENTS = [
    ('CUT', lambda v: eval('R1+H3-V1', {}, v), lambda v: eval('R1-V2', {}, v), lambda v: eval('R1+H3-1.73193', {}, v), lambda v: eval('R1-V2', {}, v)),
    ('CUT', lambda v: eval('R1+H3-1.73192', {}, v), lambda v: eval('R1-V2', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1', {}, v)),
    ('CUT', lambda v: eval('R1+H3', {}, v), lambda v: eval('R1', {}, v), lambda v: eval('R1+H3+V3', {}, v), lambda v: eval('R1-V2', {}, v)),
    ('CUT', lambda v: eval('R1+H3+V3', {}, v), lambda v: eval('R1-V2', {}, v), lambda v: eval('R1+H3+V3', {}, v), lambda v: eval('0.0', {}, v)),
    ('CUT', lambda v: eval('R1+H3+V3', {}, v), lambda v: eval('0.0', {}, v), lambda v: eval('R1+H3+L3-V3', {}, v), lambda v: eval('0.0', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3-V3', {}, v), lambda v: eval('0.0', {}, v), lambda v: eval('R1+H3+L3-V3', {}, v), lambda v: eval('R1-V2', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3-V3', {}, v), lambda v: eval('R1-V2', {}, v), lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1', {}, v), lambda v: eval('R1+H3+L3+1.73222', {}, v), lambda v: eval('R1-V2', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3+1.73224', {}, v), lambda v: eval('R1-V2', {}, v), lambda v: eval('R1+H3+L3+V1', {}, v), lambda v: eval('R1-V2', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3+V1', {}, v), lambda v: eval('R1-V2', {}, v), lambda v: eval('R1+H3+L3+V1', {}, v), lambda v: eval('R1', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3+V1', {}, v), lambda v: eval('R1', {}, v), lambda v: eval('R1+H3+L3+V1', {}, v), lambda v: eval('R1+H3-4', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3+V1', {}, v), lambda v: eval('R1+H3-3.99998', {}, v), lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1+H3', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3+L3+2', {}, v), lambda v: eval('R1+H3+Ep', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3+2', {}, v), lambda v: eval('R1+H3+Ep', {}, v), lambda v: eval('R1+H3+L3+H3', {}, v), lambda v: eval('R1+H3+Ep', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3+H3', {}, v), lambda v: eval('R1+H3+Ep', {}, v), lambda v: eval('R1+H3+L3+H3+R1', {}, v), lambda v: eval('R1+H3+Ep', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3+H3+R1', {}, v), lambda v: eval('R1+H3+Ep', {}, v), lambda v: eval('R1+H3+L3+H3+R1', {}, v), lambda v: eval('R1+H3+B3-Ep', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3+H3+R1', {}, v), lambda v: eval('R1+H3+B3-Ep', {}, v), lambda v: eval('R1+H3+L3+H3', {}, v), lambda v: eval('R1+H3+B3-Ep', {}, v)),
    ('FOLD', lambda v: eval('R1+H3+L3+H3', {}, v), lambda v: eval('R1+H3+B3-Ep', {}, v), lambda v: eval('R1+H3+L3+H3', {}, v), lambda v: eval('R1+H3+Ep', {}, v)),
    ('FOLD', lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3', {}, v)),
    ('CUT', lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3-V1', {}, v), lambda v: eval('R1+H3-3.99994', {}, v)),
    ('CUT', lambda v: eval('R1+H3-V1', {}, v), lambda v: eval('R1+H3-3.99994', {}, v), lambda v: eval('R1+H3-V1', {}, v), lambda v: eval('R1', {}, v)),
    ('CUT', lambda v: eval('R1+H3-V1', {}, v), lambda v: eval('R1', {}, v), lambda v: eval('R1+H3-V1', {}, v), lambda v: eval('R1-V2', {}, v)),
    ('FOLD', lambda v: eval('R1+H3-V1', {}, v), lambda v: eval('R1', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1', {}, v)),
    ('FOLD', lambda v: eval('R1+H3', {}, v), lambda v: eval('R1', {}, v), lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1', {}, v)),
    ('FOLD', lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1', {}, v), lambda v: eval('R1+H3+L3+V1', {}, v), lambda v: eval('R1', {}, v)),
    ('FOLD', lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1', {}, v), lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1+H3', {}, v)),
    ('FOLD', lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1+H3+B3', {}, v)),
    ('FOLD', lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1+H3+B3', {}, v), lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v)),
    ('FOLD', lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v)),
    ('FOLD', lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v), lambda v: eval('R1+H3-V1', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v)),
    ('CUT', lambda v: eval('R1+H3-V1', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v), lambda v: eval('R1+H3-V1', {}, v), lambda v: eval('R1+H3+B3+H3+V2', {}, v)),
    ('CUT', lambda v: eval('R1+H3-V1', {}, v), lambda v: eval('R1+H3+B3+H3+V2', {}, v), lambda v: eval('R1+H3-1.73193', {}, v), lambda v: eval('R1+H3+B3+H3+V2', {}, v)),
    ('CUT', lambda v: eval('R1+H3-1.73196', {}, v), lambda v: eval('R1+H3+B3+H3+V2', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v)),
    ('CUT', lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v), lambda v: eval('R1+H3+V3', {}, v), lambda v: eval('R1+H3+B3+H3+V2', {}, v)),
    ('CUT', lambda v: eval('R1+H3+V3', {}, v), lambda v: eval('R1+H3+B3+H3+V2', {}, v), lambda v: eval('R1+H3+V3', {}, v), lambda v: eval('R1+H3+B3+H3+R1', {}, v)),
    ('CUT', lambda v: eval('R1+H3+V3', {}, v), lambda v: eval('R1+H3+B3+H3+R1', {}, v), lambda v: eval('R1+H3+L3-V3', {}, v), lambda v: eval('R1+H3+B3+H3+R1', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3-V3', {}, v), lambda v: eval('R1+H3+B3+H3+R1', {}, v), lambda v: eval('R1+H3+L3-V3', {}, v), lambda v: eval('R1+H3+B3+H3+V2', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3-V3', {}, v), lambda v: eval('R1+H3+B3+H3+V2', {}, v), lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v), lambda v: eval('R1+H3+L3+1.73209', {}, v), lambda v: eval('R1+H3+B3+H3+V2', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3+1.73207', {}, v), lambda v: eval('R1+H3+B3+H3+V2', {}, v), lambda v: eval('R1+H3+L3+V1', {}, v), lambda v: eval('R1+H3+B3+H3+V2', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3+V1', {}, v), lambda v: eval('R1+H3+B3+H3+V2', {}, v), lambda v: eval('R1+H3+L3+V1', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3+V1', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v), lambda v: eval('R1+H3+L3+V1', {}, v), lambda v: eval('R1+H3+B3+3.9465', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3+V1', {}, v), lambda v: eval('R1+H3+B3+3.9465', {}, v), lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1+H3+B3', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1+H3+B3', {}, v), lambda v: eval('R1+H3+L3+2', {}, v), lambda v: eval('R1+H3+B3-Ep', {}, v)),
    ('CUT', lambda v: eval('R1+H3+L3+2', {}, v), lambda v: eval('R1+H3+B3-Ep', {}, v), lambda v: eval('R1+H3+L3+H3', {}, v), lambda v: eval('R1+H3+B3-Ep', {}, v)),
    ('FOLD', lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1+H3+B3', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3+B3', {}, v)),
    ('CUT', lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3+B3', {}, v), lambda v: eval('R1+H3-V1', {}, v), lambda v: eval('R1+H3+B3+3.94653', {}, v)),
    ('CUT', lambda v: eval('R1+H3-V1', {}, v), lambda v: eval('R1+H3+B3+3.94655', {}, v), lambda v: eval('R1+H3-V1', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v)),
    ('FOLD', lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3+B3', {}, v)),
    ('FOLD', lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3+B3', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3', {}, v)),
    ('FOLD', lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1', {}, v)),
    ('CUT', lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3-1.99989', {}, v), lambda v: eval('R1+H3+Ep', {}, v)),
    ('CUT', lambda v: eval('R1+H3-1.99988', {}, v), lambda v: eval('R1+H3+Ep', {}, v), lambda v: eval('R1', {}, v), lambda v: eval('R1+H3+Ep', {}, v)),
    ('CUT', lambda v: eval('R1', {}, v), lambda v: eval('R1+H3+Ep', {}, v), lambda v: eval('0.0', {}, v), lambda v: eval('R1+H3+Ep', {}, v)),
    ('CUT', lambda v: eval('0.0', {}, v), lambda v: eval('R1+H3+Ep', {}, v), lambda v: eval('0.0', {}, v), lambda v: eval('R1+H3+B3-Ep', {}, v)),
    ('CUT', lambda v: eval('0.0', {}, v), lambda v: eval('R1+H3+B3-Ep', {}, v), lambda v: eval('R1', {}, v), lambda v: eval('R1+H3+B3-Ep', {}, v)),
    ('FOLD', lambda v: eval('R1', {}, v), lambda v: eval('R1+H3+B3-Ep', {}, v), lambda v: eval('R1', {}, v), lambda v: eval('R1+H3+Ep', {}, v)),
    ('CUT', lambda v: eval('R1', {}, v), lambda v: eval('R1+H3+B3-Ep', {}, v), lambda v: eval('R1+H3-1.99988', {}, v), lambda v: eval('R1+H3+B3-Ep', {}, v)),
    ('CUT', lambda v: eval('R1+H3-1.99986', {}, v), lambda v: eval('R1+H3+B3-Ep', {}, v), lambda v: eval('R1+H3', {}, v), lambda v: eval('R1+H3+B3', {}, v)),
    ('FOLD', lambda v: eval('R1+H3+L3', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v), lambda v: eval('R1+H3+L3+V1', {}, v), lambda v: eval('R1+H3+B3+H3', {}, v)),
    ('CUT', lambda v: eval('P1x', {}, v), lambda v: eval('P1y+H2', {}, v), lambda v: eval('P1x', {}, v), lambda v: eval('P1y+H2+B2', {}, v)),
    ('CUT', lambda v: eval('P1x', {}, v), lambda v: eval('P1y+H2+B2', {}, v), lambda v: eval('P1x+H2-V', {}, v), lambda v: eval('P1y+H2+B2', {}, v)),
    ('CUT', lambda v: eval('P1x+H2-V', {}, v), lambda v: eval('P1y+H2+B2', {}, v), lambda v: eval('P1x+H2-V', {}, v), lambda v: eval('P1y+H2+B2+H2', {}, v)),
    ('CUT', lambda v: eval('P1x+H2-V', {}, v), lambda v: eval('P1y+H2+B2+H2', {}, v), lambda v: eval('P1x+H2+L2+V', {}, v), lambda v: eval('P1y+H2+B2+H2', {}, v)),
    ('CUT', lambda v: eval('P1x+H2+L2+V', {}, v), lambda v: eval('P1y+H2+B2+H2', {}, v), lambda v: eval('P1x+H2+L2+V', {}, v), lambda v: eval('P1y+H2+B2', {}, v)),
    ('CUT', lambda v: eval('P1x+H2+L2+V', {}, v), lambda v: eval('P1y+H2+B2', {}, v), lambda v: eval('P1x+H2+L2', {}, v), lambda v: eval('P1y+H2+B2', {}, v)),
    ('FOLD', lambda v: eval('P1x+H2+L2', {}, v), lambda v: eval('P1y+H2+B2', {}, v), lambda v: eval('P1x+H2', {}, v), lambda v: eval('P1y+H2+B2', {}, v)),
    ('CUT', lambda v: eval('P1x+H2', {}, v), lambda v: eval('P1y+H2+B2', {}, v), lambda v: eval('P1x+H2-V', {}, v), lambda v: eval('P1y+H2+B2', {}, v)),
    ('FOLD', lambda v: eval('P1x+H2', {}, v), lambda v: eval('P1y+H2+B2', {}, v), lambda v: eval('P1x+H2', {}, v), lambda v: eval('P1y+H2', {}, v)),
    ('CUT', lambda v: eval('P1x+H2', {}, v), lambda v: eval('P1y+H2', {}, v), lambda v: eval('P1x+H2-V', {}, v), lambda v: eval('P1y+H2', {}, v)),
    ('CUT', lambda v: eval('P1x+H2-V', {}, v), lambda v: eval('P1y+H2', {}, v), lambda v: eval('P1x+H2-V', {}, v), lambda v: eval('P1y', {}, v)),
    ('CUT', lambda v: eval('P1x+H2-V', {}, v), lambda v: eval('P1y', {}, v), lambda v: eval('P1x+H2+L2+V', {}, v), lambda v: eval('P1y', {}, v)),
    ('CUT', lambda v: eval('P1x+H2+L2+V', {}, v), lambda v: eval('P1y', {}, v), lambda v: eval('P1x+H2+L2+V', {}, v), lambda v: eval('P1y+H2', {}, v)),
    ('CUT', lambda v: eval('P1x+H2+L2+V', {}, v), lambda v: eval('P1y+H2', {}, v), lambda v: eval('P1x+H2+L2', {}, v), lambda v: eval('P1y+H2', {}, v)),
    ('FOLD', lambda v: eval('P1x+H2+L2', {}, v), lambda v: eval('P1y+H2', {}, v), lambda v: eval('P1x+H2+L2', {}, v), lambda v: eval('P1y+H2+B2', {}, v)),
    ('CUT', lambda v: eval('P1x+H2+L2+V', {}, v), lambda v: eval('P1y+H2+B2', {}, v), lambda v: eval('P1x+H2+L2+H2', {}, v), lambda v: eval('P1y+H2+B2', {}, v)),
    ('CUT', lambda v: eval('P1x+H2+L2+H2', {}, v), lambda v: eval('P1y+H2+B2', {}, v), lambda v: eval('P1x+H2+L2+H2', {}, v), lambda v: eval('P1y+H2', {}, v)),
    ('CUT', lambda v: eval('P1x+H2+L2+H2', {}, v), lambda v: eval('P1y+H2', {}, v), lambda v: eval('P1x+H2+L2+V', {}, v), lambda v: eval('P1y+H2', {}, v)),
    ('FOLD', lambda v: eval('P1x+H2+L2', {}, v), lambda v: eval('P1y+H2', {}, v), lambda v: eval('P1x+H2', {}, v), lambda v: eval('P1y+H2', {}, v)),
    ('CUT', lambda v: eval('P1x+H2-V', {}, v), lambda v: eval('P1y+H2', {}, v), lambda v: eval('P1x', {}, v), lambda v: eval('P1y+H2', {}, v)),
    ('CUT', lambda v: eval('P2x', {}, v), lambda v: eval('P2y+R+H1+Ep', {}, v), lambda v: eval('P2x+R', {}, v), lambda v: eval('P2y+R+H1+Ep', {}, v)),
    ('CUT', lambda v: eval('P2x+R', {}, v), lambda v: eval('P2y+R+H1+Ep', {}, v), lambda v: eval('P2x+R+H1-2.00006', {}, v), lambda v: eval('P2y+R+H1+Ep', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1-2.00003', {}, v), lambda v: eval('P2y+R+H1+Ep', {}, v), lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R+H1', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R+H1', {}, v), lambda v: eval('P2x+R+H1-V1', {}, v), lambda v: eval('P2y+R+H1-3.94653', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1-V1', {}, v), lambda v: eval('P2y+R+H1-3.94653', {}, v), lambda v: eval('P2x+R+H1-V1', {}, v), lambda v: eval('P2y+R', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1-V1', {}, v), lambda v: eval('P2y+R', {}, v), lambda v: eval('P2x+R+H1-V1', {}, v), lambda v: eval('P2y+R-V2', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1-V1', {}, v), lambda v: eval('P2y+R-V2', {}, v), lambda v: eval('P2x+R+H1-1.73206', {}, v), lambda v: eval('P2y+R-V2', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1-1.73206', {}, v), lambda v: eval('P2y+R-V2', {}, v), lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R', {}, v), lambda v: eval('P2x+R+H1+V3', {}, v), lambda v: eval('P2y+R-V2', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+V3', {}, v), lambda v: eval('P2y+R-V2', {}, v), lambda v: eval('P2x+R+H1+V3', {}, v), lambda v: eval('P2y', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+V3', {}, v), lambda v: eval('P2y', {}, v), lambda v: eval('P2x+R+H1+L1-V3', {}, v), lambda v: eval('P2y', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1-V3', {}, v), lambda v: eval('P2y', {}, v), lambda v: eval('P2x+R+H1+L1-V3', {}, v), lambda v: eval('P2y+R-V2', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1-V3', {}, v), lambda v: eval('P2y+R-V2', {}, v), lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R', {}, v)),
    ('FOLD', lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R', {}, v), lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R+H1', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R+H1', {}, v), lambda v: eval('P2x+R+H1+L1+2', {}, v), lambda v: eval('P2y+R+H1+Ep', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1+2', {}, v), lambda v: eval('P2y+R+H1+Ep', {}, v), lambda v: eval('P2x+R+H1+L1+H1', {}, v), lambda v: eval('P2y+R+H1+Ep', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1+H1', {}, v), lambda v: eval('P2y+R+H1+Ep', {}, v), lambda v: eval('P2x+R+H1+L1+H1+R', {}, v), lambda v: eval('P2y+R+H1+Ep', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1+H1+R', {}, v), lambda v: eval('P2y+R+H1+Ep', {}, v), lambda v: eval('P2x+R+H1+L1+H1+R', {}, v), lambda v: eval('P2y+R+H1+B1-Ep', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1+H1+R', {}, v), lambda v: eval('P2y+R+H1+B1-Ep', {}, v), lambda v: eval('P2x+R+H1+L1+H1', {}, v), lambda v: eval('P2y+R+H1+B1-Ep', {}, v)),
    ('FOLD', lambda v: eval('P2x+R+H1+L1+H1', {}, v), lambda v: eval('P2y+R+H1+B1-Ep', {}, v), lambda v: eval('P2x+R+H1+L1+H1', {}, v), lambda v: eval('P2y+R+H1+Ep', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1+V1', {}, v), lambda v: eval('P2y+R+H1-3.94647', {}, v), lambda v: eval('P2x+R+H1+L1+V1', {}, v), lambda v: eval('P2y+R', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1+V1', {}, v), lambda v: eval('P2y+R', {}, v), lambda v: eval('P2x+R+H1+L1+V1', {}, v), lambda v: eval('P2y+R-V2', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1+V1', {}, v), lambda v: eval('P2y+R-V2', {}, v), lambda v: eval('P2x+R+H1+L1+1.73206', {}, v), lambda v: eval('P2y+R-V2', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1+1.73206', {}, v), lambda v: eval('P2y+R-V2', {}, v), lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R', {}, v)),
    ('FOLD', lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R', {}, v), lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R', {}, v)),
    ('FOLD', lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R', {}, v), lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R+H1', {}, v)),
    ('FOLD', lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R+H1', {}, v), lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R+H1', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R+H1', {}, v), lambda v: eval('P2x+R+H1+L1+V1', {}, v), lambda v: eval('P2y+R+H1-3.94653', {}, v)),
    ('FOLD', lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R+H1', {}, v), lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R+H1+B1', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R+H1+B1', {}, v), lambda v: eval('P2x+R+H1+L1+V1', {}, v), lambda v: eval('P2y+R+H1+B1+4', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1+V1', {}, v), lambda v: eval('P2y+R+H1+B1+4', {}, v), lambda v: eval('P2x+R+H1+L1+V1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1+V1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v), lambda v: eval('P2x+R+H1+L1+V1', {}, v), lambda v: eval('P2y+R+H1+B1+H1+V2', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1+V1', {}, v), lambda v: eval('P2y+R+H1+B1+H1+V2', {}, v), lambda v: eval('P2x+R+H1+L1+1.73206', {}, v), lambda v: eval('P2y+R+H1+B1+H1+V2', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1+1.73206', {}, v), lambda v: eval('P2y+R+H1+B1+H1+V2', {}, v), lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v), lambda v: eval('P2x+R+H1+L1-V3', {}, v), lambda v: eval('P2y+R+H1+B1+H1+V2', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1-V3', {}, v), lambda v: eval('P2y+R+H1+B1+H1+V2', {}, v), lambda v: eval('P2x+R+H1+L1-V3', {}, v), lambda v: eval('P2y+R+H1+B1+H1+R', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1-V3', {}, v), lambda v: eval('P2y+R+H1+B1+H1+R', {}, v), lambda v: eval('P2x+R+H1+V3', {}, v), lambda v: eval('P2y+R+H1+B1+H1+R', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+V3', {}, v), lambda v: eval('P2y+R+H1+B1+H1+R', {}, v), lambda v: eval('P2x+R+H1+V3', {}, v), lambda v: eval('P2y+R+H1+B1+H1+V2', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+V3', {}, v), lambda v: eval('P2y+R+H1+B1+H1+V2', {}, v), lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v), lambda v: eval('P2x+R+H1-1.73206', {}, v), lambda v: eval('P2y+R+H1+B1+H1+V2', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1-1.73206', {}, v), lambda v: eval('P2y+R+H1+B1+H1+V2', {}, v), lambda v: eval('P2x+R+H1-V1', {}, v), lambda v: eval('P2y+R+H1+B1+H1+V2', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1-V1', {}, v), lambda v: eval('P2y+R+H1+B1+H1+V2', {}, v), lambda v: eval('P2x+R+H1-V1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v)),
    ('FOLD', lambda v: eval('P2x+R+H1-V1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v), lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v)),
    ('FOLD', lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v), lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R+H1+B1', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R+H1+B1', {}, v), lambda v: eval('P2x+R+H1-V1', {}, v), lambda v: eval('P2y+R+H1+B1+4', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1-V1', {}, v), lambda v: eval('P2y+R+H1+B1+4', {}, v), lambda v: eval('P2x+R+H1-V1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v)),
    ('FOLD', lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v), lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v)),
    ('FOLD', lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v), lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R+H1+B1', {}, v)),
    ('FOLD', lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R+H1+B1', {}, v), lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R+H1+B1', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R+H1+B1', {}, v), lambda v: eval('P2x+R+H1-2.00003', {}, v), lambda v: eval('P2y+R+H1+B1-Ep', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1-2.00006', {}, v), lambda v: eval('P2y+R+H1+B1-Ep', {}, v), lambda v: eval('P2x+R', {}, v), lambda v: eval('P2y+R+H1+B1-Ep', {}, v)),
    ('FOLD', lambda v: eval('P2x+R', {}, v), lambda v: eval('P2y+R+H1+B1-Ep', {}, v), lambda v: eval('P2x+R', {}, v), lambda v: eval('P2y+R+H1+Ep', {}, v)),
    ('CUT', lambda v: eval('P2x', {}, v), lambda v: eval('P2y+R+H1+Ep', {}, v), lambda v: eval('P2x', {}, v), lambda v: eval('P2y+R+H1+B1-Ep', {}, v)),
    ('CUT', lambda v: eval('P2x', {}, v), lambda v: eval('P2y+R+H1+B1-Ep', {}, v), lambda v: eval('P2x+R', {}, v), lambda v: eval('P2y+R+H1+B1-Ep', {}, v)),
    ('FOLD', lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R+H1+B1', {}, v), lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R+H1', {}, v)),
    ('FOLD', lambda v: eval('P2x+R+H1', {}, v), lambda v: eval('P2y+R', {}, v), lambda v: eval('P2x+R+H1-V1', {}, v), lambda v: eval('P2y+R', {}, v)),
    ('FOLD', lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R', {}, v), lambda v: eval('P2x+R+H1+L1+V1', {}, v), lambda v: eval('P2y+R', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1+2.00006', {}, v), lambda v: eval('P2y+R+H1+B1-Ep', {}, v), lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R+H1+B1', {}, v)),
    ('CUT', lambda v: eval('P2x+R+H1+L1+2', {}, v), lambda v: eval('P2y+R+H1+B1-Ep', {}, v), lambda v: eval('P2x+R+H1+L1+H1', {}, v), lambda v: eval('P2y+R+H1+B1-Ep', {}, v)),
    ('FOLD', lambda v: eval('P2x+R+H1+L1+V1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v), lambda v: eval('P2x+R+H1+L1', {}, v), lambda v: eval('P2y+R+H1+B1+H1', {}, v)),
    ('CUT', lambda v: eval('P3x', {}, v), lambda v: eval('P3y+H', {}, v), lambda v: eval('P3x', {}, v), lambda v: eval('P3y+H+L', {}, v)),
    ('CUT', lambda v: eval('P3x', {}, v), lambda v: eval('P3y+H+L', {}, v), lambda v: eval('P3x+H-V', {}, v), lambda v: eval('P3y+H+L', {}, v)),
    ('CUT', lambda v: eval('P3x+H-V', {}, v), lambda v: eval('P3y+H+L', {}, v), lambda v: eval('P3x+H-V', {}, v), lambda v: eval('P3y+H+L+H', {}, v)),
    ('CUT', lambda v: eval('P3x+H-V', {}, v), lambda v: eval('P3y+H+L+H', {}, v), lambda v: eval('P3x+H+B+V', {}, v), lambda v: eval('P3y+H+L+H', {}, v)),
    ('CUT', lambda v: eval('P3x+H+B+V', {}, v), lambda v: eval('P3y+H+L+H', {}, v), lambda v: eval('P3x+H+B+V', {}, v), lambda v: eval('P3y+H+L', {}, v)),
    ('CUT', lambda v: eval('P3x+H+B+V', {}, v), lambda v: eval('P3y+H+L', {}, v), lambda v: eval('P3x+H+B', {}, v), lambda v: eval('P3y+H+L', {}, v)),
    ('FOLD', lambda v: eval('P3x+H+B', {}, v), lambda v: eval('P3y+H+L', {}, v), lambda v: eval('P3x+H+B', {}, v), lambda v: eval('P3y+H', {}, v)),
    ('FOLD', lambda v: eval('P3x+H+B', {}, v), lambda v: eval('P3y+H', {}, v), lambda v: eval('P3x+H', {}, v), lambda v: eval('P3y+H', {}, v)),
    ('FOLD', lambda v: eval('P3x+H', {}, v), lambda v: eval('P3y+H', {}, v), lambda v: eval('P3x+H', {}, v), lambda v: eval('P3y+H+L', {}, v)),
    ('CUT', lambda v: eval('P3x+H', {}, v), lambda v: eval('P3y+H+L', {}, v), lambda v: eval('P3x+H-V', {}, v), lambda v: eval('P3y+H+L', {}, v)),
    ('FOLD', lambda v: eval('P3x+H', {}, v), lambda v: eval('P3y+H+L', {}, v), lambda v: eval('P3x+H+B', {}, v), lambda v: eval('P3y+H+L', {}, v)),
    ('CUT', lambda v: eval('P3x+H+B+V', {}, v), lambda v: eval('P3y+H+L', {}, v), lambda v: eval('P3x+H+B+H', {}, v), lambda v: eval('P3y+H+L', {}, v)),
    ('CUT', lambda v: eval('P3x+H+B+H', {}, v), lambda v: eval('P3y+H+L', {}, v), lambda v: eval('P3x+H+B+H', {}, v), lambda v: eval('P3y+H', {}, v)),
    ('CUT', lambda v: eval('P3x+H+B+H', {}, v), lambda v: eval('P3y+H', {}, v), lambda v: eval('P3x+H+B+V', {}, v), lambda v: eval('P3y+H', {}, v)),
    ('CUT', lambda v: eval('P3x+H+B+V', {}, v), lambda v: eval('P3y+H', {}, v), lambda v: eval('P3x+H+B', {}, v), lambda v: eval('P3y+H', {}, v)),
    ('CUT', lambda v: eval('P3x+H+B+V', {}, v), lambda v: eval('P3y+H', {}, v), lambda v: eval('P3x+H+B+V', {}, v), lambda v: eval('P3y', {}, v)),
    ('CUT', lambda v: eval('P3x+H+B+V', {}, v), lambda v: eval('P3y', {}, v), lambda v: eval('P3x+H-V', {}, v), lambda v: eval('P3y', {}, v)),
    ('CUT', lambda v: eval('P3x+H-V', {}, v), lambda v: eval('P3y', {}, v), lambda v: eval('P3x+H-V', {}, v), lambda v: eval('P3y+H', {}, v)),
    ('CUT', lambda v: eval('P3x+H-V', {}, v), lambda v: eval('P3y+H', {}, v), lambda v: eval('P3x', {}, v), lambda v: eval('P3y+H', {}, v)),
    ('CUT', lambda v: eval('P3x+H-V', {}, v), lambda v: eval('P3y+H', {}, v), lambda v: eval('P3x+H', {}, v), lambda v: eval('P3y+H', {}, v)),
]